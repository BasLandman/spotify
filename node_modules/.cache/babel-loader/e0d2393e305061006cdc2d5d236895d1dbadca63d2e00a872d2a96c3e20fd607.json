{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});","map":{"version":3,"names":[],"sources":["C:\\Users\\aidan\\OneDrive\\Desktop\\spotify\\node_modules\\typia\\src\\schemas\\IJsonSchema.ts"],"sourcesContent":["import { IJsDocTagInfo } from \"../metadata/IJsDocTagInfo\";\nimport { IMetadataTag } from \"../metadata/IMetadataTag\";\n\nimport { Atomic } from \"../typings/Atomic\";\n\nexport type IJsonSchema = IJsonSchema.NotUnknown | IJsonSchema.IUnknown;\nexport namespace IJsonSchema {\n    export type NotUnknown =\n        | IEnumeration<\"boolean\">\n        | IEnumeration<\"number\">\n        | IEnumeration<\"string\">\n        | IBoolean\n        | IInteger\n        | INumber\n        | IString\n        | IArray\n        | ITuple\n        | IOneOf\n        | IReference\n        | IRecursiveReference\n        | INullOnly;\n\n    /* -----------------------------------------------------------\n        ATOMICS\n    ----------------------------------------------------------- */\n    export interface IEnumeration<\n        Literal extends Exclude<Atomic.Literal, \"bigint\">,\n    > extends IAtomic<Literal> {\n        enum: Array<Atomic.Mapper[Literal]>;\n    }\n    export interface IAtomic<Literal extends Exclude<Atomic.Literal, \"bigint\">>\n        extends ISignificant<Literal> {\n        default?: Atomic.Mapper[Literal];\n    }\n    export interface IString extends IAtomic<\"string\"> {\n        /**\n         * @type uint\n         */\n        minLength?: number;\n        /**\n         * @type uint\n         */\n        maxLength?: number;\n        pattern?: string;\n        format?: string;\n    }\n    export interface INumber extends IAtomic<\"number\"> {\n        minimum?: number;\n        maximum?: number;\n        exclusiveMinimum?: boolean;\n        exclusiveMaximum?: boolean;\n        multipleOf?: number;\n    }\n    export interface IInteger extends IAtomic<\"integer\"> {\n        /**\n         * @type int\n         */\n        minimum?: number;\n        /**\n         * @type int\n         */\n        maximum?: number;\n        exclusiveMinimum?: boolean;\n        exclusiveMaximum?: boolean;\n        /**\n         * @type int\n         */\n        multipleOf?: number;\n    }\n    export interface IBoolean extends IAtomic<\"boolean\"> {}\n\n    /* -----------------------------------------------------------\n        OBJECTS\n    ----------------------------------------------------------- */\n    export interface IArray extends ISignificant<\"array\"> {\n        items: IJsonSchema;\n        /**\n         * @type uint\n         */\n        minItems?: number;\n        /**\n         * @type uint\n         */\n        maxItems?: number;\n        \"x-typia-tuple\"?: ITuple;\n    }\n    export interface ITuple extends ISignificant<\"array\"> {\n        items: IJsonSchema[];\n    }\n    export interface IReference extends IAttribute {\n        $ref: string;\n    }\n    export interface IRecursiveReference extends IAttribute {\n        $recursiveRef: string;\n    }\n    export interface INullOnly extends IAttribute {\n        type: \"null\";\n    }\n\n    /* -----------------------------------------------------------\n        MISCELLANEOUS\n    ----------------------------------------------------------- */\n    export interface IOneOf extends IAttribute {\n        oneOf: IJsonSchema[];\n    }\n    export interface IUnknown {}\n\n    export interface ISignificant<Literal extends string> extends IAttribute {\n        type: Literal;\n        nullable: boolean;\n    }\n    export interface IAttribute {\n        deprecated?: boolean;\n        title?: string;\n        description?: string;\n        \"x-typia-metaTags\"?: IMetadataTag[];\n        \"x-typia-jsDocTags\"?: IJsDocTagInfo[];\n        \"x-typia-required\"?: boolean;\n        \"x-typia-rest\"?: boolean;\n    }\n}\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}